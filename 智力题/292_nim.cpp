#include <iostream>

class Solution {
public:
    bool canWinNim(int n);
};

// 这是一个挺有意思的问题
// 首先是两个人都会按照最优策略拿取石头，因为两个人在每一步中都会选择最优解
// 因此，开始的总数便决定了最终结果的输赢
// 题目已经给出了提示，即一个4的例子

// 逆向考虑，当先手倒数第二次拿了若干石头后，如果还剩下4块，那么先手一定可以赢，因为最后一次还是先手拿走，并且可以全部拿走
// 因此，先手如果在第一次中，拿走了总数%4的余数部分的石头，那么剩下的石头数则是4的倍数，那么保证从第二次开始，我们与后手拿的石头总数为4，就可以保证我们先手的胜利
// 同理，如果本身m就是4的倍数，那么不管先手第一次怎么拿，后手只需要保证和先手拿的石头一起，总数为4，那么后手一定赢，因为后手也是可以思考的，会按照最优策略
// 综上，实际上考虑清楚了就是一行代码的问题

bool Solution::canWinNim(int n) {
    return n % 4;
}
